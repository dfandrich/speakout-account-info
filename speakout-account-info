#!/bin/bash
# Retrieve balance information for a SpeakOut cellular account
set -e
echo -n "User: "
read LOGINNAME
echo -n "Pw: "
stty -echo
read PASS
stty echo
echo ''

RECIPIENT=root@localhost

# Lower limit (in dollars) below which a warning is generated
LIMIT=5
# Set to yes to send a mail always, blank to mail only when under limit
ALWAYSMAIL=yes

readonly UA='User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:91.0) Gecko/20100101 Firefox/91.0'

COOKIES="$(mktemp)"
FORMFILE="$(mktemp)"
CONTENTFILE="$(mktemp --suffix=.html)"
CERTFILE="$(mktemp)"
trap 'test "$?" -ne 0 && echo Error encountered; rm -f "$COOKIES" "$FORMFILE" "$CONTENTFILE" "$CERTFILE"' EXIT

# The web site has an incomplete certificate chain because it is missing this
# intermediate certificate
cat >"$CERTFILE" <<EOF
# DigiCertTLSRSASHA2562020CA1.crt
-----BEGIN CERTIFICATE-----
MIIE6jCCA9KgAwIBAgIQCjUI1VwpKwF9+K1lwA/35DANBgkqhkiG9w0BAQsFADBh
MQswCQYDVQQGEwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQLExB3
d3cuZGlnaWNlcnQuY29tMSAwHgYDVQQDExdEaWdpQ2VydCBHbG9iYWwgUm9vdCBD
QTAeFw0yMDA5MjQwMDAwMDBaFw0zMDA5MjMyMzU5NTlaME8xCzAJBgNVBAYTAlVT
MRUwEwYDVQQKEwxEaWdpQ2VydCBJbmMxKTAnBgNVBAMTIERpZ2lDZXJ0IFRMUyBS
U0EgU0hBMjU2IDIwMjAgQ0ExMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKC
AQEAwUuzZUdwvN1PWNvsnO3DZuUfMRNUrUpmRh8sCuxkB+Uu3Ny5CiDt3+PE0J6a
qXodgojlEVbbHp9YwlHnLDQNLtKS4VbL8Xlfs7uHyiUDe5pSQWYQYE9XE0nw6Ddn
g9/n00tnTCJRpt8OmRDtV1F0JuJ9x8piLhMbfyOIJVNvwTRYAIuE//i+p1hJInuW
raKImxW8oHzf6VGo1bDtN+I2tIJLYrVJmuzHZ9bjPvXj1hJeRPG/cUJ9WIQDgLGB
Afr5yjK7tI4nhyfFK3TUqNaX3sNk+crOU6JWvHgXjkkDKa77SU+kFbnO8lwZV21r
eacroicgE7XQPUDTITAHk+qZ9QIDAQABo4IBrjCCAaowHQYDVR0OBBYEFLdrouqo
qoSMeeq02g+YssWVdrn0MB8GA1UdIwQYMBaAFAPeUDVW0Uy7ZvCj4hsbw5eyPdFV
MA4GA1UdDwEB/wQEAwIBhjAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIw
EgYDVR0TAQH/BAgwBgEB/wIBADB2BggrBgEFBQcBAQRqMGgwJAYIKwYBBQUHMAGG
GGh0dHA6Ly9vY3NwLmRpZ2ljZXJ0LmNvbTBABggrBgEFBQcwAoY0aHR0cDovL2Nh
Y2VydHMuZGlnaWNlcnQuY29tL0RpZ2lDZXJ0R2xvYmFsUm9vdENBLmNydDB7BgNV
HR8EdDByMDegNaAzhjFodHRwOi8vY3JsMy5kaWdpY2VydC5jb20vRGlnaUNlcnRH
bG9iYWxSb290Q0EuY3JsMDegNaAzhjFodHRwOi8vY3JsNC5kaWdpY2VydC5jb20v
RGlnaUNlcnRHbG9iYWxSb290Q0EuY3JsMDAGA1UdIAQpMCcwBwYFZ4EMAQEwCAYG
Z4EMAQIBMAgGBmeBDAECAjAIBgZngQwBAgMwDQYJKoZIhvcNAQELBQADggEBAHer
t3onPa679n/gWlbJhKrKW3EX3SJH/E6f7tDBpATho+vFScH90cnfjK+URSxGKqNj
OSD5nkoklEHIqdninFQFBstcHL4AGw+oWv8Zu2XHFq8hVt1hBcnpj5h232sb0HIM
ULkwKXq/YFkQZhM6LawVEWwtIwwCPgU7/uWhnOKK24fXSuhe50gG66sSmvKvhMNb
g0qZgYOrAKHKCjxMoiWJKiKnpPMzTFuMLhoClw+dj20tlQj7T9rxkTgl4ZxuYRiH
as6xuwAwapu3r9rxxZf+ingkquqTgLozZXq8oXfpf2kUCwA/d5KxTVtzhwoT0JzI
8ks5T1KESaZMkE4f97Q=
-----END CERTIFICATE-----
EOF
# Get a session cookie and redirect to the session-specific login URL
curl --compressed --cacert "$CERTFILE" --silent --fail --retry 3 --cookie-jar "$COOKIES" --location --proto-redir -all,https --max-redirs 5 -o "$CONTENTFILE" -H "$UA" https://www.speakout7eleven.ca/customer/account/
# Convert to xhtml for manipulation
tidy -utf8 -asxml -numeric  -f /dev/null --output-file "$CONTENTFILE" "$CONTENTFILE" || test "$?" == 1

# Get the session-specific POST URL. A failure here will happen during web site maintenance.
POSTURL="$(xmlstarlet sel -N x=http://www.w3.org/1999/xhtml -t -v '//x:form[@id="login-form"]/@action' "$CONTENTFILE")"
FORMKEY="$(xmlstarlet sel -N x=http://www.w3.org/1999/xhtml -t -v '//x:form[@id="login-form"]/x:input[@name="form_key"]/@value' "$CONTENTFILE")"

# Put passwords into a file so they aren't visible to ps
cat >"$FORMFILE" <<EOF
-d "form_key=$FORMKEY"
-d "login[username]=$LOGINNAME"
-d "login[password]=$PASS"
-d "send=Login"
--cookie "form_key=$FORMKEY"
EOF
# Log in & download status page
curl --silent --compressed --cacert "$CERTFILE" --fail --retry 3 --cookie-jar "$COOKIES" --location --proto-redir -all,https --max-redirs 5 -o "$CONTENTFILE" -H "$UA" --config "$FORMFILE" --referer "$POSTURL" "$POSTURL"

# Convert to xhtml for manipulation
tidy -utf8 -asxml -numeric  -f /dev/null --output-file "$CONTENTFILE" "$CONTENTFILE" || test "$?" == 1

BALANCE="$(xmlstarlet sel -N x=http://www.w3.org/1999/xhtml -t -v '//x:div[@class="act-bal"]/x:h2' "$CONTENTFILE")"
# Strip off the dollar sign
BALANCE="${BALANCE#$}"
EXPIRY="$(xmlstarlet sel -N x=http://www.w3.org/1999/xhtml -t -v '//x:span[@id="remaining_date"]' "$CONTENTFILE")"
PHONENUM="$(xmlstarlet sel -N x=http://www.w3.org/1999/xhtml -t -v '//x:option[@name="sel_speakout_number"][@selected="selected"]/@value' "$CONTENTFILE")"
# Format phone number more nicely
PHONENUM="$(sed -Ee 's/^(...)(...)(.*)$/(\1) \2-\3/' <<< "$PHONENUM")"

if awk "BEGIN {exit !($BALANCE < $LIMIT)}"; then
    LIMITEXCEEDED=yes
else
    LIMITEXCEEDED=
fi

cat >"$CONTENTFILE" <<EOF
<!doctype html><html lang="en"><body>
<h1>SpeakOut cellular account status report for $PHONENUM</h1>
<p>
<span style='font-weight: bold; font-size: x-large;'>Balance: \$$BALANCE</span>
<p>
As of $(date), the balance remaining on the cellular number $PHONENUM is
<span style='font-size: medium'>\$$BALANCE</span> which expires $EXPIRY.
EOF

if [[ -n "$LIMITEXCEEDED" ]]; then
    cat >>"$CONTENTFILE" <<EOF
        <span style='color: red; font-weight: bold;'>This is below the warning threshold of \$$LIMIT!</span>
        <p>
        Add more money to your account now by
        <a href="https://www.speakout7eleven.ca/userinfo/activation/topup/">choosing an amount here</a>.
EOF
fi

cat >>"$CONTENTFILE" <<EOF
        <p>
        <a href="https://www.speakout7eleven.ca/customer/account/">Log in to your account here</a>.
</body></html>
EOF

if [[ -n "$LIMITEXCEEDED" || -n "$ALWAYSMAIL" ]]; then
    mail -s "SpeakOut cellular account status report for $(date +'%B %d, %Y')" -a "$CONTENTFILE" "$RECIPIENT" </dev/null
fi

# Temporary files are automatically deleted and the end
